generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id                  String        @id @default(cuid())
  title               String
  description         String
  startDate           DateTime
  endDate             DateTime
  location            String
  price               Int
  maxParticipants     Int
  currentParticipants Int           @default(0)
  image               String
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  difficulty          String
  includes            String[]
  status              String        @default("upcoming")
  participants        Participant[]
}

model Participant {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  eventId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  event     Event    @relation(fields: [eventId], references: [id])
}

model Gallery {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  coverImage  String
  images      Image[]
}

model Image {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  galleryId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gallery   Gallery  @relation(fields: [galleryId], references: [id])
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  subject   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id              String   @id @default(cuid())
  title           String
  slug            String   @unique
  content         String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  description     String?
  isSystem        Boolean  @default(false)
  metaDescription String?
  metaTitle       String?
}

model Testimonial {
  id        String   @id @default(cuid())
  name      String
  image     String
  text      String
  isVisible Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AdminSecret {
  id        String   @id @default(cuid())
  secret    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
